---
import type { SanityDocument } from "@sanity/client";
import type { PageSlugProps, BlockBase } from "@front/types";
import { loadQuery } from "@back/lib/load-query";
import { pageQuery } from "@front/lib/queries";
import { blockComponents } from "@front/components/block";
import { getDraftModeInfo } from "@front/lib/draftMode";
import Layout from "../layouts/Layout.astro";

const { serverDraftMode, visualEditingEnabled }
	= getDraftModeInfo(Astro.request);

export async function getStaticPaths() {
  const { data: pages } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "page"]`,
  });

  return pages.map(({ slug }) => ({
       params: { pageSlug: slug.current },
  }));
}

const { pageSlug } = Astro.params;

const { data: page } = await loadQuery<PageSlugProps>({
  query: pageQuery,
  params: { slug: pageSlug },
  perspective: serverDraftMode ? "previewDrafts" : "published",
  visualEditingEnabled
});

// el slug existe pero la pagina no tiene absolutamente nada.
const blankPage = page || {
  heading: "Título de la página",
  subheading: "Subtítulo de la página",
  pageBuilder: [],
};

// si no hay post y no estamos viendo un borrador
if (!page && !serverDraftMode) {
  return Astro.redirect('/api/draft-mode/disable');
}

// si la página no existe, redirigir a un 404
if (!page) {
  return Astro.redirect('/404');
}
---

<Layout>
  {Object.keys(blankPage).length === 0 ? ( // Si la pagina no tiene campos
    <h1>Esta página está vacía. ¡Regresa pronto!</h1>
  ) : ( // Si la página tiene al menos un campo
    <>
      {page?.pageBuilder?.length > 0 && (
        <>
          {page.pageBuilder.map((block: BlockBase) => {
            const BlockComponent = blockComponents[block._type as keyof typeof blockComponents];
            return BlockComponent ? <BlockComponent {...block} key={block._key || block._id} /> : null;
          })}
        </>
      )}
    </>
  )}
</Layout>